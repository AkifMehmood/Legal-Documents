# This workflow will build and push a Python application to an Azure Web App when a commit is pushed to your default branch.
#
# Pre-requisites:
# 1. Create your Azure Web App (Flask/Django supported).
# 2. Download the Publish Profile from the Azure Portal (Web App → Overview → Get publish profile).
# 3. Add the secret in GitHub: Settings → Secrets → Actions → New Repository Secret → name it AZURE_WEBAPP_PUBLISH_PROFILE.
# 4. Ensure requirements.txt contains Flask and gunicorn.

name: Build and deploy Python app to Azure Web App

env:
  AZURE_WEBAPP_NAME: legalAI-App   # App Service name
  PYTHON_VERSION: '3.11'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Deploy to Azure Web App using ZipDeploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
          clean: true
          scm-do-build-during-deployment: true   # forces ZipDeploy


