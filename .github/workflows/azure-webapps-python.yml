# This workflow will build and push a Python application to an Azure Web App when a commit is pushed to your default branch.
#
# Pre-requisites:
# 1. Create your Azure Web App (Flask/Django supported).
# 2. Download the Publish Profile from the Azure Portal (Web App → Overview → Get publish profile).
# 3. Add the secret in GitHub: Settings → Secrets → Actions → New Repository Secret → name it AZURE_WEBAPP_PUBLISH_PROFILE.
# 4. Ensure requirements.txt contains Flask and gunicorn.

name: Build and deploy Python app to Azure Web App

env:
  AZURE_WEBAPP_NAME: legalAI-App  # App Service name
  PYTHON_VERSION: '3.11'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

    - name: 'Deploy to Azure Web App'
  uses: azure/webapps-deploy@v2
  with:
    app-name: legalAI-App
    publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
    package: .
    startup-command: gunicorn --bind=0.0.0.0 --timeout 600 app:app


