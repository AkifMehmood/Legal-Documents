# This workflow will build and push a Python application to an Azure Web App when a commit is pushed to your default branch.
#
# Pre-requisites:
# 1. Create your Azure Web App (Flask/Django supported).
# 2. Download the Publish Profile from the Azure Portal (Web App → Overview → Get publish profile).
# 3. Add the secret in GitHub: Settings → Secrets → Actions → New Repository Secret → name it AZURE_WEBAPP_PUBLISH_PROFILE.
# 4. Ensure requirements.txt contains Flask and gunicorn.

name: Build and deploy Python app to Azure Web App

env:
  AZURE_WEBAPP_NAME: legalAI-App    # name of your Azure Web App
  PYTHON_VERSION: '3.11'            # Python version you want to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # (Optional) Run tests
      # - name: Run tests
      #   run: pytest

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          startup-command: 'gunicorn --bind=0.0.0.0 --timeout 600 app:app'
